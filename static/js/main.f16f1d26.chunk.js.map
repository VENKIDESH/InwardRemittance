{"version":3,"sources":["components/table.js","components/bCoins.js","components/wCoins.js","components/cCoin.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","Tables","props","classes","btcInr","last","usdtBtc","usdtInr","rate","alert","ethInr","usdtEth","xrpInr","usdtXrp","ltcInr","usdtLtc","react_default","a","createElement","Box","width","Typography","align","style","fontWeight","fontSize","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","TableCell","TableBody","key","scope","toFixed","App","state","display","flexflow","this","_this2","fetch","then","res","json","data","setState","btcinr","catch","console","log","ethinr","xrpinr","ltcinr","rates","USDINR","setTimeout","componentDidMount","bind","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f16f1d26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nconst Tables = (props) => {\r\n  const classes = useStyles();\r\n  if(((props.btcInr.last-( props.usdtBtc.last*props.usdtInr.rate))/( props.usdtBtc.last*props.usdtInr.rate)*100)>6){alert(\"Yo its the best time to take some BTc to India\")}\r\n  if(((props.btcInr.last-( props.usdtBtc.last*props.usdtInr.rate))/( props.usdtBtc.last*props.usdtInr.rate)*100)<1){alert(\"Yo its the best time to take some BTc from India\")}\r\n  if(((props.ethInr.last-( props.usdtEth.last*props.usdtInr.rate))/( props.usdtEth.last*props.usdtInr.rate)*100)>6){alert(\"Yo its the best time to take some ETH to India\")}\r\n  if(((props.ethInr.last-( props.usdtEth.last*props.usdtInr.rate))/( props.usdtEth.last*props.usdtInr.rate)*100)<1){alert(\"Yo its the best time to take some ETH from India\")}\r\n  if(((props.xrpInr.last-( props.usdtXrp.last*props.usdtInr.rate))/( props.usdtXrp.last*props.usdtInr.rate)*100)>6){alert(\"Yo its the best time to take some XRP to India\")}\r\n  if(((props.xrpInr.last-( props.usdtXrp.last*props.usdtInr.rate))/( props.usdtXrp.last*props.usdtInr.rate)*100)<1){alert(\"Yo its the best time to take some XRP from India\")}\r\n  if(((props.ltcInr.last-( props.usdtLtc.last*props.usdtInr.rate))/( props.usdtLtc.last*props.usdtInr.rate)*100)>6){alert(\"Yo its the best time to take some LTC to India\")}\r\n  if(((props.ltcInr.last-( props.usdtLtc.last*props.usdtInr.rate))/( props.usdtLtc.last*props.usdtInr.rate)*100)<1){alert(\"Yo its the best time to take some LTC from India\")}\r\n  return (\r\n    <Box width=\"100%\">\r\n      <Typography\r\n        align=\"center\"\r\n        style={{ fontWeight: \"bolder\", fontSize: \"20px\" }}\r\n      >\r\n        CEX vs wazirX Conversion List\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"medium\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" style={{ fontWeight: \"bolder\" }}>\r\n                Conversion Between\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ fontWeight: \"bolder\" }}>\r\n                CEX.io (USD)\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ fontWeight: \"bolder\" }}>\r\n                CEX.io (Inr)\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ fontWeight: \"bolder\" }}>\r\n                wazirX (Inr)\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ fontWeight: \"bolder\" }}>\r\n                Conversion Profit\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ fontWeight: \"bolder\" }}>\r\n                Profit Percentage\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow key=\"1\">\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                USD > BTC > Inr\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.usdtBtc.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {(props.usdtBtc.last*props.usdtInr.rate).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.btcInr.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {(props.btcInr.last-( props.usdtBtc.last*props.usdtInr.rate)).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {((props.btcInr.last-( props.usdtBtc.last*props.usdtInr.rate))/( props.usdtBtc.last*props.usdtInr.rate)*100).toFixed(3)}%\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key=\"2\">\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                USD > ETH > Inr\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.usdtEth.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {(props.usdtEth.last*props.usdtInr.rate).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.ethInr.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {(props.ethInr.last-( props.usdtEth.last*props.usdtInr.rate)).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {((props.ethInr.last-( props.usdtEth.last*props.usdtInr.rate))/( props.usdtEth.last*props.usdtInr.rate)*100).toFixed(3)}%\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key=\"3\">\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                USD > XRP > Inr\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.usdtXrp.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {(props.usdtXrp.last*props.usdtInr.rate).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.xrpInr.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {(props.xrpInr.last-( props.usdtXrp.last*props.usdtInr.rate)).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {((props.xrpInr.last-( props.usdtXrp.last*props.usdtInr.rate))/( props.usdtXrp.last*props.usdtInr.rate)*100).toFixed(3)}%\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key=\"4\">\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                USD > LTC > Inr\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.usdtLtc.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {(props.usdtLtc.last*props.usdtInr.rate).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {props.ltcInr.last}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {(props.ltcInr.last-( props.usdtLtc.last*props.usdtInr.rate)).toFixed(3)}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {((props.ltcInr.last-( props.usdtLtc.last*props.usdtInr.rate))/( props.usdtLtc.last*props.usdtInr.rate)*100).toFixed(3)}%\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Box,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nconst BCoins = ({bCoins}) => {\r\n    const classes = useStyles();\r\n    return (\r\n    \r\n        <Box width=\"33%\" >\r\n            <Typography align=\"center\" style={{fontWeight:\"bolder\", fontSize:\"20px\"}}>Binance Coin Conversion List</Typography>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{fontWeight:\"bolder\"}}>Conversion Between</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:\"bolder\"}}>Conversion Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {bCoins.map((bCoin) => (\r\n            <TableRow key={bCoin.symbol}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {bCoin.symbol}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{bCoin.price}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer></Box>\r\n    \r\n    )\r\n};\r\n\r\nexport default BCoins","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Box,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nconst WCoins = ({wCoins}) => {\r\n    const classes = useStyles();\r\n    return (\r\n      <Box width=\"33%\" >\r\n            <Typography align=\"center\" style={{fontWeight:\"bolder\", fontSize:\"20px\"}}>Bittrex Coin Conversion List</Typography>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{fontWeight:\"bolder\"}}>Conversion Between</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:\"bolder\"}}>Conversion Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {wCoins.map((wCoin) => (\r\n            <TableRow key={wCoin.MarketName}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {wCoin.MarketName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{wCoin.Last}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer></Box>\r\n    \r\n    )\r\n};\r\n\r\nexport default WCoins","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Box,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nconst CCoins = ({cCoins}) => {\r\n    const classes = useStyles();\r\n    return (\r\n    \r\n        <Box width=\"33%\" >\r\n            <Typography align=\"center\" style={{fontWeight:\"bolder\", fontSize:\"20px\"}}>cex Coin Conversion List</Typography>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{fontWeight:\"bolder\"}}>Conversion Between</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:\"bolder\"}}>Conversion Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {cCoins.map((cCoin) => (\r\n            <TableRow key={cCoin.symbol1}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {cCoin.symbol1}/{cCoin.symbol2}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{cCoin.maxPrice}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer></Box>\r\n    \r\n    )\r\n};\r\n\r\nexport default CCoins","import React, { Component } from \"react\";\r\nimport BCoins from \"./components/bCoins\";\r\nimport WCoins from \"./components/wCoins\";\r\nimport CCoins from \"./components/cCoin\";\r\nimport Tables from \"./components/table\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <Box display=\"flex\" flexflow=\"row\">\r\n        <Tables\r\n          btcInr={this.state.btcInr}\r\n          ethInr={this.state.ethInr}\r\n          xrpInr={this.state.xrpInr}\r\n          ltcInr={this.state.ltcInr}\r\n          usdtBtc={this.state.usdtBtc}\r\n          usdtEth={this.state.usdtEth}\r\n          usdtXrp={this.state.usdtXrp}\r\n          usdtLtc={this.state.usdtLtc}\r\n          usdtInr={this.state.usdtInr}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  state = {\r\n    btcInr: [],\r\n    ethInr: [],\r\n    xrpInr: [],\r\n    ltcInr: [],\r\n    usdtBtc: [],\r\n    usdtEth: [],\r\n    usdtXrp: [],\r\n    usdtLtc: [],\r\n    usdtInr: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.wazirx.com/api/v2/tickers\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ btcInr: data.btcinr });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://api.wazirx.com/api/v2/tickers\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ ethInr: data.ethinr });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://api.wazirx.com/api/v2/tickers\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ xrpInr: data.xrpinr });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://api.wazirx.com/api/v2/tickers\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ ltcInr: data.ltcinr });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://cex.io/api/ticker/BTC/USD\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ usdtBtc: data });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://cex.io/api/ticker/ETH/USD\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ usdtEth: data });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://cex.io/api/ticker/XRP/USD\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ usdtXrp: data });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://cex.io/api/ticker/LTC/USD\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ usdtLtc: data });\r\n      })\r\n      .catch(console.log);\r\n    fetch(\"https://www.freeforexapi.com/api/live?pairs=USDINR\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ usdtInr: data.rates.USDINR });\r\n      })\r\n      .catch(console.log);\r\n      setTimeout(this.componentDidMount.bind(this), 5000);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}